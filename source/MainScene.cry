//Graphics2D.Draw.line(x1, y1, x2, y2, thick, r, g, b);
import Graphics2D;
import Math;
import Random;
import TwoCansAlpha4;

const WINDOW_SIZE = 600;

enum State{
	X,
	O,
	TIE,
	NEUTRAL
}

function grid(start){
	return ((start*WINDOW_SIZE)/35);
}

class Tile{
	
	field state;
	field point;
	
	constructor(point){
		this.state = State.NEUTRAL;
		this.point = point;
	}
	
}

class Board{
	
	field board;
	field tile1;
	field tile2;
	field tile3;
	field tile4;
	field tile5;
	field tile6;
	field tile7;
	field tile8;
	field tile9;
	field corner;
	field state = State.NEUTRAL;
	
	constructor(corner){
		this.tile1 = new Tile(corner);
		this.tile2 = new Tile({"x": grid(corner["x"]+3), "y": corner["y"]});
		this.tile3 = new Tile({"x": grid(corner["x"]+6), "y": corner["y"]});
		this.tile4 = new Tile({"x": corner["x"], "y": grid(corner["y"]+3)});
		this.tile5 = new Tile({"x": grid(corner["x"]+3), "y": grid(corner["y"]+3)});
		this.tile6 = new Tile({"x": grid(corner["x"]+6), "y": grid(corner["y"]+3)});
		this.tile7 = new Tile({"x": corner["x"], "y": grid(corner["y"]+6)});
		this.tile8 = new Tile({"x": grid(corner["x"]+3), "y": grid(corner["y"]+6)});
		this.tile9 = new Tile({"x": grid(corner["x"]+6), "y": grid(corner["y"]+6)});
		
		this.board = [this.tile1, this.tile2, this.tile3, this.tile4, this.tile5, this.tile6,this.tile7, this.tile8, this.tile9];
		this.corner = corner;
	}
	
	function checkWinner(){
		//stuff
		return null;
	}
	
	function printBoard(){
		
		//draw lines
		//Graphics2D.Draw.line(x1, y1, x2, y2, 3, 0, 0, 0);
		Graphics2D.Draw.line(grid(this.corner["x"]+3),grid(this.corner["y"]+0),grid(this.corner["x"]+3),grid(this.corner["y"]+9), 3, 127, 127, 127);
		Graphics2D.Draw.line(grid(this.corner["x"]+6),grid(this.corner["y"]+0),grid(this.corner["x"]+6),grid(this.corner["y"]+9), 3, 127, 127, 127);
		Graphics2D.Draw.line(grid(this.corner["x"]+0),grid(this.corner["y"]+3),grid(this.corner["x"]+9),grid(this.corner["y"]+3), 3, 127, 127, 127);
		Graphics2D.Draw.line(grid(this.corner["x"]+0),grid(this.corner["y"]+6),grid(this.corner["x"]+9),grid(this.corner["y"]+6), 3, 127, 127, 127);
		return null;
	}
	
	function drawX(point){
		Graphics2D.Draw.line(grid(point["x"]-0.8), grid(point["y"]-0.8), grid(point["x"]+0.8), grid(point["y"]+0.8), 5, 0, 0, 255);
		Graphics2D.Draw.line(grid(point["x"]-0.8), grid(point["y"]+0.8), grid(point["x"]+0.8), grid(point["y"]-0.8), 5, 0, 0, 255);
	}
}

class MainScene : AbstractScene {
	
	field boards;
	field board1;
	field board2;
	field board3;
	field board4;
	field board5;
	field board6;
	field board7;
	field board8;
	field board9;
	
	constructor() : base() {
		this.board1 = new Board({"x": 2, "y": 2});
		this.board2 = new Board({"x": 13, "y": 2});
		this.board3 = new Board({"x": 24, "y": 2});
		this.board4 = new Board({"x": 2, "y": 13});
		this.board5 = new Board({"x": 13, "y": 13});
		this.board6 = new Board({"x": 24, "y": 13});
		this.board7 = new Board({"x": 2, "y": 24});
		this.board8 = new Board({"x": 13, "y": 24});
		this.board9 = new Board({"x": 24, "y": 24});
		this.boards = [this.board1, this.board2, this.board3, this.board4, this.board5, this.board6, this.board7, this.board8, this.board9];
	}
	
	function update(inputManager, events) {
		
		if (inputManager.isKeyPressed(KeyboardKey.LEFT)) {
			print("left");
		} else if (inputManager.isKeyPressed(KeyboardKey.RIGHT)) {
			print("right");
		}
		
	}
	
	function render() {
		Graphics2D.Draw.fill(255,255,255);
		
		//print board lines
		for(b : this.boards){
			b.printBoard();
		}
		Graphics2D.Draw.line(grid(1+11),grid(1+0),grid(1+11),grid(1+33), 5, 0, 0, 0);
		Graphics2D.Draw.line(grid(1+22),grid(1+0),grid(1+22),grid(1+33), 5, 0, 0, 0);
		Graphics2D.Draw.line(grid(1+0),grid(1+11),grid(1+33),grid(1+11), 5, 0, 0, 0);
		Graphics2D.Draw.line(grid(1+0),grid(1+22),grid(1+33),grid(1+22), 5, 0, 0, 0);
		this.boards[0].drawX({"x": 3.5, "y": 3.5});
	}
}
